image: paskalmaksim/aks-node-termination-handler:latest
imagePullPolicy: Always
imagePullSecrets: []

args: []
env: []

priorityClassName: ""
annotations: {}
labels: {}

configMap:
  create: true
  name: "{{ .Release.Name }}-files"
  mountPath: /files
  data: {}
    # slack-payload.json: |
    #   {
    #     "channel": "#mychannel",
    #     "username": "webhookbot",
    #     "text": "This is message for {{ .NodeName }}, {{ .InstanceType }} from {{ .NodeRegion }}",
    #     "icon_emoji": ":ghost:"
    #   }
    # prometheus-pushgateway-payload.txt: |
    #   node_termination_event{node="{{ .NodeName }}"} 1

extraVolumes: []
extraVolumeMounts: []

networkPolicy:
  enabled: false
  # controlPlaneIP: "123.X.X.X" # If not provided, network policy will allow all access to port 443/tcp
  # additionalEgressRules:
  # - ports:
  #   - port: 443
  #     protocol: TCP
  #   to:
  #   - ipBlock:
  #       cidr: 124.X.X.X/24

metrics:
  addAnnotations: true

hostNetwork: false

securityContext:
  runAsNonRoot: true
  privileged: false
  readOnlyRootFilesystem: true
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  windowsOptions:
    runAsUserName: "ContainerUser"
  seccompProfile:
    type: RuntimeDefault

affinity: {}

tolerations:
- key: "kubernetes.azure.com/scalesetpriority"
  operator: "Equal"
  value: "spot"
  effect: "NoSchedule"

nodeSelector: {}
# if you want handle events only from spot instances
# nodeSelector:
#   kubernetes.azure.com/scalesetpriority: spot

resources:
  limits:
    memory: 100Mi
  requests:
    cpu: 20m
    memory: 100Mi
